import requests
import json
import logging

logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

def generate_response(message: str) -> str:
    logger.info(f"üì® –ó–∞–ø—Ä–æ—Å –∫ –º–æ–¥–µ–ª–∏: {message}")
    
    try:
        response = requests.post(
            "http://ollama:11435/api/chat",
            json={
                "model": "llama3:latest",  # –∏–ª–∏ –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                "messages": [{"role": "user", "content": message}],
                "stream": True
            },
            timeout=60
        )

        result = ""
        for line in response.iter_lines(decode_unicode=True):
            if line.strip():
                try:
                    data = json.loads(line)
                    content = data.get("message", {}).get("content")
                    if content:
                        result += content
                except json.JSONDecodeError as je:
                    logger.warning(f"‚ö†Ô∏è JSON-–¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å: {je}")
                    continue

        if not result.strip():
            logger.warning("‚ö†Ô∏è –ú–æ–¥–µ–ª—å –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç")
            return "‚ö†Ô∏è –ú–æ–¥–µ–ª—å –Ω–µ –¥–∞–ª–∞ –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å."

        logger.info(f"üì§ –û—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏: {result[:200]}...")  # –ª–æ–≥ –ø–µ—Ä–≤—ã—Ö 200 —Å–∏–º–≤–æ–ª–æ–≤
        return result

    except requests.exceptions.RequestException as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –º–æ–¥–µ–ª—å—é: {e}")
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –º–æ–¥–µ–ª–∏. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç.\n\n{str(e)}"
    
    except Exception as e:
        logger.error(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞: {e}")
        return f"‚ö†Ô∏è –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.\n\n{str(e)}"
